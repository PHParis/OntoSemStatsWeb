@page "/"

@using OntoSemStatsWeb.Data
@inject SparqlService SparqlService

<h1>Enter your endpoint</h1>
<!-- 
<p>This component demonstrates fetching data from a service.</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button> -->

<EditForm Model="@ontologyResult" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
    <label for="SparqlEndpointUri">Sparql Endpoint Uri: </label>
    <InputText id="SparqlEndpointUri" @bind-Value="ontologyResult.SparqlEndpointUri" />
    </p>
    <button type="submit">Submit</button>
</EditForm>

<div>
    @Message
</div>

<div>
    @if (ontologyResult.Result != null && ontologyResult.Result.Any())
    {
        @foreach (var result in ontologyResult.Result)
        {

        }
    }
    
</div>


@code {

    /*protected override async Task OnInitializedAsync()
    {
        forecasts = await SparqlService.GetDataAsync("http://dbpedia.org/sparql");
    } */
    private OntologyResult ontologyResult = new OntologyResult();
    private string Message = "";
    private async Task HandleValidSubmit()
    {
        Message = "Please wait while processing...";
        Console.WriteLine("OnValidSubmit");
        await SparqlService.GetDataAsync(ontologyResult);
        Message = "";
    }
}
